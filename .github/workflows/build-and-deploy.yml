# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests
# It will then deploy to Netlify

name: Build and Deploy

on:
  push:
    # branches: ['main'] run on any push
  pull_request:
    branches: ['main']
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - run: echo "A ${{ github.event_name}} triggered this run..."
      - run: echo "Checking out project from ${{ github.ref_name }}..."
      - uses: actions/checkout@v4

      - run: echo "Installing Node.js 20..."
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: echo "Installing dependencies..."
      - run: npm ci

      # - run: echo "Linting project..."
      # - run: npm run eslint

      # - run: echo "Testing project..."
      # - run: npm run test

      - run: echo "Building project..."
      - run: npm run build --if-present
        env:
          WORDPRESS_AUTH_USERNAME: ${{ secrets.WORDPRESS_AUTH_USERNAME }}
          WORDPRESS_AUTH_PASSWORD: ${{ secrets.WORDPRESS_AUTH_PASSWORD }}
          WORDPRESS_API_URL: ${{ secrets.WORDPRESS_API_URL }}
          # MOVIE_ID: ${{ secrets.MOVIE_ID }}
          # NASA_API_KEY: ${{ secrets.NASA_API_KEY }}

      - run: echo "Deploying to Netlify..."
      - name: Deploy to Netlify using CLI
        run: |
          prod_flag=""
          if [ "${{ github.ref_name }}" = "main" ]; then prod_flag="--prod"; fi
          npx netlify deploy \
            --dir dist \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_ACCESS_TOKEN }} \
            --message "Deployed ${{ github.ref_name }} from GitHub Actions" \
            --skip-functions-cache \
            $prod_flag
